# Uboot script for babyshark
# Scans devices in ${boot_devices} and their corresponding device numbers in
# ${${boot_device}_device_numbers}} for (first) a boot script and then a fitimage

arch=arm
baudrate=115200
board=zynq
board_name=zynq
bootcmd=run digico_bootcmd

# MIO pin for safeboot button
safeboot_gpio=0
# MIO pin to pull USB PHY out of reset
usb_reset_n_gpio=9

# List of names to search for boot scripts
boot_script_filenames=boot.scr

# List of names to search for fitImages
fitimage_filenames=fitImage image.ub

# boot list
boot_devices=usb0 usb1 mmc0

# mem locations
uboot_script_load_addr=0x8000000
fitimage_load_addr=0x4000000

digico_bootcmd=if gpio input ${safeboot_gpio}; then run do_safeboot; else run do_normalboot; fi;

do_safeboot=echo "safeboot pressed: exiting to uboot prompt";
do_normalboot= \
    gpio set ${usb_reset_n_gpio}; \
    usb start; \
    for device in ${boot_devices}; do \
        run do_boot_${device}; \
    done;

do_boot_usb0=devtype=usb; devnum=0; if usb dev ${devnum}; then run do_scan_device; fi;
do_boot_usb1=devtype=usb; devnum=1; if usb dev ${devnum}; then run do_scan_device; fi;
do_boot_mmc0=devtype=mmc; devnum=0; if mmc dev ${devnum}; then run do_scan_device; fi;

do_scan_device= \
    part list ${devtype} ${devnum} -bootable bootable_partitions; \
    env exists bootable_partitions || setenv bootable_partitions 1; \
    for bootable_partition in ${bootable_partitions}; do \
        run do_scan_partition; \
    done; \
    setenv bootable_partitions;

do_scan_partition=run do_scan_bootscript; run do_scan_fitimage;

do_scan_bootscript= \
    for script in ${boot_script_filenames}; do \
        if test -e ${devtype} ${devnum}:${bootable_partition} ${script}; then \
            run do_try_script; \
        fi; \
    done;
do_try_script= \
    echo "scan ${devtype} ${devnum} ${bootable_partition} ${script}"; \
    load ${devtype} ${devnum}:${bootable_partition} ${uboot_script_load_addr} ${script}; \
    source ${uboot_script_load_addr}; \
    echo "script failed";

do_scan_fitimage= \
    for fitimage in ${fitimage_filenames}; do \
        if test -e ${devtype} ${devnum}:${bootable_partition} ${fitimage}; then \
            run do_try_fitimage; \
        fi; \
    done;
do_try_fitimage= \
    echo "scan ${devtype} ${devnum} ${bootable_partition} ${fitimage}"; \
    load ${devtype} ${devnum}:${bootable_partition} ${fitimage_load_addr} ${fitimage}; \
    bootm ${fitimage_load_addr};

do_replace_bootbin= \
    sf probe 0 0 0; \
    sf erase 0 0x2000000; \
    gpio set 9; \
    usb start; \
    load usb 0:1 0x8000000 boot.bin; \
    size usb 0:1 boot.bin; \
    sf write 0x8000000 0 ${filesize};

